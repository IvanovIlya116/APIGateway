# == Общая конфигурация ==
spring.application.name=APIGateway
server.port=8080

# == Мониторинг ==
# Включить все actuator endpoints, включая Prometheus
management.endpoints.web.exposure.include=*

# Вынос метрик на отдельный порт (по желанию)
management.server.port=8081

# Включить сбор метрик маршрутов Gateway
management.metrics.tags.application=APIGateway
management.metrics.enable.gateway.requests=true

# == OAuth2 (Keycloak) ==
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://oauth2-service:8085/realms/government-data
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://oauth2-service:8085/realms/government-data/protocol/openid-connect/certs

# == Gateway маршруты ==

# DataCollectorService (было: DataFetcherService)
spring.cloud.gateway.routes[0].id=data-collector
spring.cloud.gateway.routes[0].uri=http://data-collector-service:8088
spring.cloud.gateway.routes[0].predicates[0]=Path=/collector/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/collector/(?<segment>.*), /collector/${segment}

# DataProcessorService
spring.cloud.gateway.routes[1].id=data-processor
spring.cloud.gateway.routes[1].uri=http://dataprocessor-service:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/process/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/process/(?<segment>.*), /process/${segment}

# DataStorageService
spring.cloud.gateway.routes[2].id=storage-service
spring.cloud.gateway.routes[2].uri=http://storage-service:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/storage/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/storage/(?<segment>.*), /storage/${segment}

# DataGenerationService
spring.cloud.gateway.routes[3].id=data-generator
spring.cloud.gateway.routes[3].uri=http://data-generator-service:8084
spring.cloud.gateway.routes[3].predicates[0]=Path=/generate/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/generate/(?<segment>.*), /generate/${segment}

# NotificationService
spring.cloud.gateway.routes[4].id=notification-service
spring.cloud.gateway.routes[4].uri=http://notification-service:8086
spring.cloud.gateway.routes[4].predicates[0]=Path=/notify/**
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/notify/(?<segment>.*), /notify/${segment}

# AnalyticsService
spring.cloud.gateway.routes[5].id=analytics-service
spring.cloud.gateway.routes[5].uri=http://analytics-service:8087
spring.cloud.gateway.routes[5].predicates[0]=Path=/analytics/**
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/analytics/(?<segment>.*), /analytics/${segment}

# == Безопасность ==
spring.main.allow-bean-definition-overriding=true

logging.file.name=/shared-logs/apigateway.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
